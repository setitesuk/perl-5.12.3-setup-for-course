.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MooseX::POE::Meta::Trait::Object 3"
.TH MooseX::POE::Meta::Trait::Object 3 "2010-12-06" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MooseX::POE::Meta::Trait::Object \- The base class role for MooseX::POE
.SH "VERSION"
.IX Header "VERSION"
version 0.211
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    package Counter;
\&    use MooseX::Poe;
\&
\&    has name => (
\&        isa     => \*(AqStr\*(Aq,
\&        is      => \*(Aqrw\*(Aq,
\&        default => sub { \*(AqFoo \*(Aq },
\&    );
\&
\&    has count => (
\&        isa     => \*(AqInt\*(Aq,
\&        is      => \*(Aqrw\*(Aq,
\&        lazy    => 1,
\&        default => sub { 0 },
\&    );
\&
\&    sub START {
\&        my ($self) = @_;
\&        $self\->yield(\*(Aqincrement\*(Aq);
\&    }
\&
\&    sub increment {
\&        my ($self) = @_;
\&        $self\->count( $self\->count + 1 );
\&        $self\->yield(\*(Aqincrement\*(Aq) unless $self\->count > 3;
\&    }
\&
\&    no MooseX::Poe;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
MooseX::POE::Meta::TraitObject is a role that is applied to the object base
classe (usually Moose::Object) that implements a POE::Session.
.SH "METHODS"
.IX Header "METHODS"
.SS "get_session_id"
.IX Subsection "get_session_id"
Get the internal \s-1POE\s0 Session \s-1ID\s0, this is useful to hand to other \s-1POE\s0 aware
functions.
.SS "yield"
.IX Subsection "yield"
.SS "call"
.IX Subsection "call"
.SS "delay"
.IX Subsection "delay"
.SS "alarm"
.IX Subsection "alarm"
.SS "alarm_add"
.IX Subsection "alarm_add"
.SS "delay_add"
.IX Subsection "delay_add"
.SS "alarm_set"
.IX Subsection "alarm_set"
.SS "alarm_adjust"
.IX Subsection "alarm_adjust"
.SS "alarm_remove"
.IX Subsection "alarm_remove"
.SS "alarm_remove_all"
.IX Subsection "alarm_remove_all"
.SS "delay_set"
.IX Subsection "delay_set"
.SS "delay_adjust"
.IX Subsection "delay_adjust"
A cheap alias for the same POE::Kernel function which will gurantee posting to the object's session.
.SS "\s-1STARTALL\s0"
.IX Subsection "STARTALL"
Along similar lines to Moose's \f(CW\*(C`BUILDALL\*(C'\fR method which calls all the \f(CW\*(C`BUILD\*(C'\fR
methods, this function will call all the \f(CW\*(C`START\*(C'\fR methods in your inheritance
hierarchy automatically when \s-1POE\s0 first runs your session. (This corresponds to
the \f(CW\*(C`_start\*(C'\fR event from \s-1POE\s0.)
.SS "\s-1STOPALL\s0"
.IX Subsection "STOPALL"
Along similar lines to \f(CW\*(C`STARTALL\*(C'\fR, but for \f(CW\*(C`STOP\*(C'\fR instead.
.SS "\s-1START\s0"
.IX Subsection "START"
.SS "\s-1STOP\s0"
.IX Subsection "STOP"
.SS "\s-1DEFAULT\s0"
.IX Subsection "DEFAULT"
.SS "\s-1CHILD\s0"
.IX Subsection "CHILD"
.SS "\s-1PARENT\s0"
.IX Subsection "PARENT"
.SH "DEFAULT METHODS"
.IX Header "DEFAULT METHODS"
.SH "PREDEFINED EVENTS"
.IX Header "PREDEFINED EVENTS"
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Chris Prather <chris@prather.org>
.IP "\(bu" 4
Ash Berlin <ash@cpan.org>
.IP "\(bu" 4
Chris Williams <chris@bingosnet.co.uk>
.IP "\(bu" 4
Yuval (nothingmuch) Kogman
.IP "\(bu" 4
Torsten Raudssus <torsten@raudssus.de> <http://www.raudssus.de/>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2010 by Chris Prather, Ash Berlin, Chris Williams, Yuval Kogman, Torsten Raudssus.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
